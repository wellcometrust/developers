"use strict";exports.__esModule=true;exports.default=nextPageConfig;function replacePath(path,t){path.parentPath.replaceWith(t.program([t.variableDeclaration('const',[t.variableDeclarator(t.identifier('config'),t.assignmentExpression('=',t.identifier('no'),// this can't be empty but is required
t.stringLiteral(`__NEXT_DROP_CLIENT_FILE__ ${Date.now()}`)))])],[]));}function nextPageConfig({types:t}){return{visitor:{Program:{enter(path,state){path.traverse({ExportNamedDeclaration(path,state){if(state.replaced||!path.node.declaration||!path.node.declaration.declarations)return;const{declarations}=path.node.declaration;const config={};for(const declaration of declarations){if(declaration.id.name!=='config')continue;for(const prop of declaration.init.properties){const{name}=prop.key;if(name==='amp')config.amp=prop.value.value;}}if(config.amp===true){replacePath(path,t);state.replaced=true;}},CallExpression(path,state){// @ts-ignore
if(state.replaced||path.node.callee.name!=='withAmp')return;if(path.node.arguments.length>1){if(!t.isObjectExpression(path.node.arguments[1]))return;// @ts-ignore
const options=path.node.arguments[1];// make sure it isn't a hybrid page e.g. hybrid: true
if(options.properties.some(prop=>{if(!t.isObjectProperty(prop))return false;if(prop.key.name!=='hybrid'||!t.isBooleanLiteral(prop.value)){return false;}// found hybrid: true
return Boolean(prop.value.value);})){return;}}// use random number and an increment to make sure HMR still updates
replacePath(path,t);state.replaced=true;}},state);}}}};}